name: Update Helm Values & Open PR

on:
  workflow_run:
    workflows: ["Release to GHCR"] # must match name in your build workflow
    types:
      - completed

jobs:
  update-values-and-pr:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0 # important for PR creation

      - name: Set up Git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Extract version from pyproject.toml
        id: version
        run: |
          VERSION=$(grep -Po '(?<=^version = ")[^"]+' pyproject.toml)
          echo "VERSION=v$VERSION" >> $GITHUB_ENV
          echo "Repository=ghcr.io/${{ github.repository }}" >> $GITHUB_ENV

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.40.5/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Check if tag/repo changed in values.yaml
        id: check
        run: |
          CURRENT_REPO=$(yq eval '.image.repository' deployments/helm/values.yaml)
          CURRENT_TAG=$(yq eval '.image.tag' deployments/helm/values.yaml)

          echo "Current: $CURRENT_REPO:$CURRENT_TAG"
          echo "New: $Repository:$VERSION"

          if [[ "$CURRENT_REPO" != "$Repository" || "$CURRENT_TAG" != "$VERSION" ]]; then
            echo "UPDATE_REQUIRED=true" >> $GITHUB_ENV
          else
            echo "No update needed."
            echo "UPDATE_REQUIRED=false" >> $GITHUB_ENV
          fi

      - name: Exit early if no update needed
        if: env.UPDATE_REQUIRED == 'false'
        run: echo "values.yaml is up to date. Skipping PR."

      - name: Update Chart.yaml & values.yaml with version and commit them
        if: env.UPDATE_REQUIRED == 'true'
        run: |
          CHART_FILE=deployments/helm/Chart.yaml
          VALUE_FILE=deployments/helm/values.yaml

          yq eval ".version = \"${VERSION#v}\" |
                   .appVersion = \"${VERSION#v}\"" \
                   -i "$CHART_FILE"

          yq eval ".image.repository = \"$Repository\" |
                   .image.tag = \"$VERSION\"" \
                   -i "$VALUE_FILE"

          git add "$CHART_FILE" "$VALUE_FILE"
          git commit -m "ci: update Helm values.yaml and Chart.yaml to $Repository:$VERSION"
          git push origin main
